<?php

/**
 * @file
 * Adds a "Remember me" checkbox to login forms.
 */


/**
 * Implements hook_init().
 */
function remember_me_init() {
  global $user;

  // If we have a user logged in, then we have a session.
  if ($user->uid) {
    if (!empty($user->data['remember_me']) && variable_get('remember_me_managed', 0) != 0) {
      // Set lifetime as configured via admin settings.
      if (variable_get('remember_me_lifetime', 604800) != ini_get('session.cookie_lifetime')) {
        _remember_me_set_lifetime(variable_get('remember_me_lifetime', 604800));
      }
    }
    elseif (empty($user->data['remember_me'])) {
      // If we have cookie lifetime set already then unset it.
      if (0 != ini_get('session.cookie_lifetime')) {
        _remember_me_set_lifetime(0);
      }
    }
  }
}

/**
 * remember_me_init() callback helper function.
 */
function _remember_me_set_lifetime($cookie_lifetime) {
  // We have session started.
  // Lets close the session, change php cookie lifetime variable, and start
  // session again.
  // Prevent sess_write from persisting the session object at this time,
  // it will happen on shutdown.
  drupal_save_session(FALSE);
  session_write_close();
  drupal_save_session(TRUE);

  ini_set('session.cookie_lifetime', $cookie_lifetime);

  // TODO: not overwriting session handler here anymore, still necessary?

  drupal_session_started(FALSE);
  drupal_session_initialize();
}

/**
 * Implements hook_user_login().
 */

function remember_me_user_login(&$edit, $account) {
  $remember_me = isset($edit['input']['remember_me']) ? $edit['input']['remember_me'] : false;
  if ($account->uid) {
    var_dump ($remember_me);
    user_save($account, array(
      'data' => array ('remember_me' => (bool) $remember_me),
        ), NULL);
      }

  // TODO: not tested if this still works
    if (variable_get('remember_me_phantom_session', 0)) {
      module_load_include('inc', 'remember_me', 'includes/remember_me');
      remember_me_manage_phantom_sessions();
    }
  }

/**
 * Implements hook_form_alter().
 */
function remember_me_form_alter(&$form, $form_state, $form_id) {
  $user_login_forms = array('user_login', 'user_login_block');

  if (in_array($form_id, $user_login_forms)) {
    module_load_include('inc', 'remember_me', 'includes/remember_me');
    remember_me_insert_checkbox($form);
  }
}

/**
 * Implements hook_theme().
 */
function remember_me_theme() {
  return array(
    'remember_me_settings_display' => array(
      'variables' => array('vars' => array()),
      'file' => 'includes/remember_me.admin.inc',
    ),
  );
}

/**
 * Implements hook_menu().
 */
function remember_me_menu() {
  $items = array();
  $items['admin/config/system/remember_me'] = array(
    'title'            => 'Remember me settings',
    'description'      => 'Configure settings like session time out for remember_me module.',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('remember_me_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file'             => 'includes/remember_me.admin.inc',
    'type'             => MENU_NORMAL_ITEM
  );

  $base = array(
    'type'             => MENU_CALLBACK,
    'access arguments' => array('administer site configuration'),
    'file'             => 'includes/remember_me.users.inc',
  );

  $items['remember_me/ajax/users/online'] = array(
    'page callback'    => 'remember_me_ajax_users_online',
  ) + $base;

  $items['admin/config/system/remember_me/users/online'] = array(
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('remember_me_ajax_users_online_form'),
    'title'            => "'Who's online' settings",
  ) + $base;

  $base = array(
    'type'             => MENU_CALLBACK,
    'access arguments' => array('administer site configuration'),
    'file'             => 'includes/remember_me.test.inc',
  );

  $items['remember_me/test'] = array(
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('test_fapi_edit'),
  ) + $base;

  return $items;
}

/**
 * Implements hook_help().
 */
function remember_me_help($path, $arg) {
  switch ($path) {
    case 'admin/help#remember_me':
      return t('Allows users to have persistent sessions via a checkbox "Remember me" on the login form.');
  }
}
