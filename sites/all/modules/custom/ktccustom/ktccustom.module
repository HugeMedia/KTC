<?php

/**
 * implementation of hook_menu
 */
function ktccustom_menu() {

    $items['document/%'] = array(
        'title' => 'Document',
        'page callback' => 'ktc_get_document',
        'page arguments' => array(1),
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );

    $items['document-browse'] = array(
        'title' => '',
        'page callback' => 'ktc_document_browse',
        'page arguments' => array(1),
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    
    $items['document-browse/%'] = array(
        'title' => '',
        'page callback' => 'ktc_document_browse_category',
        'page arguments' => array(1),
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    
    $items['advocacy-login'] = array(
        'title' => 'Advocacy Tools',
        'page callback' => 'ktc_advocacy_login',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    
    $items['soda-stories-videos'] = array(
        'title' => 'Soda Stories',
        'page callback' => 'ktc_soda_stories',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    
    $items['testpage'] = array(
        'title' => 'TestPage',
        'page callback' => 'ktccustom_get_fast_facts_news_flash',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    
    $items['gallery'] = array(
        'title' => 'Image Gallery',
        'page callback' => 'ktccustom_get_gallery',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    
    $items['admin/config/content/menu-icons'] = array(
        'title' => 'Menu icons for second level dropdown',
        'description' => 'Assign menu icons',
	'page callback' => 'ktccustom_get_menu_icon_form',
	'access arguments' => array('administer nodes'),
	'type' => MENU_NORMAL_ITEM,
    );
    
    return $items;
}


function ktccustom_init() {
    // add some css/js to fancy up some of the node edit pages
    drupal_add_js(drupal_get_path('module', 'ktccustom') . '/js/ktcadmin.js');
    drupal_add_css(drupal_get_path('module', 'ktccustom') . '/css/ktcadmin.css');
}


function ktccustom_get_gallery() {
    drupal_add_js(drupal_get_path('module', 'ktccustom') . '/js/ktcgallery.js');
    drupal_add_css(drupal_get_path('module', 'ktccustom') . '/css/ktcgallery.css');
    $expform = module_invoke('views', 'block_view', '-exp-image_gallery-page');
    $gallery_view = views_embed_view('image_gallery', 'block_1');
    
    $rend = array(
        'gallery_view' => $gallery_view,
        'expform' => $expform,
        '#theme' => 'ktc_gallery',
    );
    return $rend;
}


function ktccustom_get_menu_icon_form() {
   return drupal_get_form('ktccustom_menu_icon_form');
}


function ktccustom_menu_icon_form() {
    drupal_set_title('Menu Icons');
   $result = db_query("SELECT link_path, link_title FROM {menu_links}
    WHERE link_path NOT LIKE '<front>' AND
    link_path NOT LIKE '%admin%' AND
    link_path NOT LIKE '%user/%' AND
    link_path NOT LIKE '%menu-position/%' AND
    depth=3 AND
    menu_name LIKE 'main-menu'
    ORDER BY link_title asc");
   
   //$form['bg-menu-entries'] = array(
   //  '#type' => 'markup',
   //  '#markup' => '<h2>Pages with main menu entries:</h2>',
   //);
   
   foreach ($result as $row) {
      $pathalias = drupal_lookup_path('alias', $row->link_path);
      $pathalias = ($pathalias == '') ? $row->link_path : $pathalias;
      $form['icon-' . $row->link_path] = array(
         '#type' => 'select',
         '#title' => $row->link_title . ' : ' . $pathalias,
         '#description' => t(''),
         '#options' => ktc_load_icon_options(),
         '#default_value' => variable_get('icon-' . $row->link_path, 'none'),
         '#required' => FALSE,
      );
   }
   
   return system_settings_form($form);
}


function ktc_load_icon_options() {
    $options = array();
    $options['none'] = 'None';
    $query = db_select('node', 'n');
    $query
      ->condition('type', 'menu_icon')
      ->fields('n', array('title', 'nid'));
    $result = $query->execute();
    
    foreach ($result as $row) {
        $iconnode = node_load($row->nid);
        //dpm($iconnode);
        $image_uri = file_build_uri($iconnode->field_icon_image['und'][0]['filename']); // somewhat new annoying way to get a uri/path in Drupal 7
        $image_url = file_create_url($image_uri);
        //dd($image_url);
        $options[$row->nid] = $row->title;
        //$options[$row->nid] = '<img src="' . $image_url . '"/>';
    }
    return $options;
}


function ktc_soda_stories() {
    //drupal_add_js(drupal_get_path('module', 'ktccustom') . '/js/jcarousel/lib/jquery.jcarousel.min.js');
    drupal_add_js(drupal_get_path('module', 'ktccustom') . '/js/jcarousellite_1.0.1.min.js');
    drupal_add_js(drupal_get_path('theme', 'ktc') .'/js/ktc_youtube.js');
    drupal_add_js(drupal_get_path('module', 'ktccustom') . '/js/ktcvideos.js');
    drupal_add_css(drupal_get_path('module', 'ktccustom') . '/css/ktcvideos.css');
    
    $featured = views_embed_view('featured_videos', 'block');
    $video_cats = views_embed_view('video_categories', 'block');
    
    $cat_tree = taxonomy_get_tree(7);
    $vids_by_cat = array();
    foreach ($cat_tree as $cat) {
        $rendered_view = views_embed_view('videos_by_category', 'block', $cat->tid);
        if (strpos($rendered_view, 'BLANK') === FALSE) {
            $vids_by_cat[$cat->tid] = $rendered_view;
        }
    }
    
    
    $cat_tree = taxonomy_get_tree(7);
    //dpm($cat_tree);
    $cats = array();
    foreach ($cat_tree as $cat) {
        $cat_obj = array();
        $cat_obj['name'] = $cat->name;
        $cats[] = $cat_obj;
    }
    
     $rend = array(
        'numcats' => count($cat_tree),
        'cats' => $cats,
        'video_cats' => $video_cats,
        'vids_by_cat' => $vids_by_cat,
        'featured' => $featured,
        '#theme' => 'ktc_videos',
    );
    return $rend;
}


function ktccustom_get_youtube_id($link) {
    $vid = '';
    if (strpos($link, 'www.youtube.com') !== FALSE && strpos($link, 'watch?') !== FALSE) {
        $url = $link;
        $urlparts = explode('v=', $url);
        $vid = $urlparts[1];
        $extra = explode('&', $vid);
        $vid = $extra[0];
    }
    elseif (strpos($link, 'youtu.be') !== FALSE) {
        $url = $link;
        $urlparts = explode('.be/', $url);
        $vid = $urlparts[1];
        $extra = explode('&', $vid);
        $vid = $extra[0];
    }
    return $vid;
}



function ktccustom_node_presave($node) {
  if ($node->type == 'soda_story') {

    $vid = ktccustom_get_youtube_id($node->field_story_video['und'][0]['value']);
        
    if (!isset($node->field_story_thumb['und'][0]['fid']) && $vid != null) {
        // grab the youtube thumbnail for the video,
        // unless one was supplied already
        // 0.jpg is the bigger thumbnail, 2.jpg is the smaller one
        $request = drupal_http_request('http://img.youtube.com/vi/' . $vid . '/0.jpg');
        $data = $request->data;
    
        $new_file_name = str_replace(' ', '-', $node->title) . '-thumb.jpg';
        $file = file_save_data($request->data, 'public://story_thumbs/' . $new_file_name, FILE_EXISTS_RENAME);
        $node->field_story_thumb['und'][0]['fid'] = $file->fid;
        $node->field_doc_file['und'][0]['display'] = 1;    
    }
    
    // update number of views from youtube
    //$numviews = _get_num_youtube_views($vid);
    //$node->field_number_views['und'][0]['value'] = $numviews;
  }
  
}


function _get_num_youtube_views($video_ID) {
    $JSON = file_get_contents("http://gdata.youtube.com/feeds/api/videos?q={$video_ID}&alt=json");  
    $JSON_Data = json_decode($JSON);
    $views = $JSON_Data->{'feed'}->{'entry'}[0]->{'yt$statistics'}->{'viewCount'};
    return $views;
}

// create a login modal. ctools modal is able to handle form validation in a modal,
// which would otherwise be time consuming to do from scratch.
function ktc_advocacy_login() {
    ctools_include('ajax');
    ctools_include('modal');
     $form_state = array(
      'ajax' => TRUE,
      'title' => t('Login'),
    );
    $output = ctools_modal_form_wrapper('user_login', $form_state);
    print ajax_render($output);
}



// gets the file url for the node and sends the user to it
function ktc_get_document($nid) {
    $node = node_load($nid);
    if ($node == NULL) {
        return "There is no document with id " . $nid . ".";
    }
    if (!isset($node->field_document_file['und'])) {
        return "The file associated with this document appears to be missing.";
    }
    
    $url = '';
    if (isset($node->field_doc_type['und']) && $node->field_doc_type['und'][0]['tid'] == 25) {  // external url type
        $url = $node->field_doc_external['und'][0]['url'];
    }
    else {  // locally uploaded file
        $file = file_load($node->field_document_file['und'][0]['fid']);
        $url = file_create_url($file->uri);
    }
    drupal_goto($url);
}


function ktc_document_browse() {
    drupal_add_css(drupal_get_path('module', 'ktccustom') . '/css/ktccustom.css');
    drupal_add_js(drupal_get_path('module', 'ktccustom') . '/js/ktcdocs.js');
    $topics = taxonomy_get_tree(2);
    $audience = taxonomy_get_tree(3);
    $resourcetypes = taxonomy_get_tree(4); 
    //dpm($topics);
    $rend = array(
        'show_results' => FALSE,
        'topics' => $topics,
        'audience' => $audience,
        'resourcetypes' => $resourcetypes,
        '#theme' => 'ktc_documents',
    );
    return $rend;
}


function ktc_document_browse_category($tid) {
    drupal_add_css(drupal_get_path('module', 'ktccustom') . '/css/ktccustom.css');
    drupal_add_js(drupal_get_path('module', 'ktccustom') . '/js/ktcdocs.js');
    $topics = taxonomy_get_tree(2);
    //$audience = taxonomy_get_tree(3);
    $resourcetypes = taxonomy_get_tree(4); 
    //dpm($topics);
    
    $term = taxonomy_term_load($tid);
    $term_name = '';
    if ($term) {
        $term_name = $term->name;
    }
    // get docs that match the criteria
    $docs = views_embed_view('documents_by_category', 'block', $tid);
    
    $rend = array(
        'show_results' => TRUE,
        'topics' => $topics,
        //'audience' => $audience,
        'category_name' => $term_name,
        'resourcetypes' => $resourcetypes,
        'docs' => $docs,
        '#theme' => 'ktc_documents',
    );
    return $rend;
}


function theme_bw_wolf($variables) {
    return 'hello there';
}


function ktccustom_theme() {
  $items = array(
    'ktc_documents' => array(
      'render element' => 'element',
      'path' => drupal_get_path('module', 'ktccustom') . '/tmpl',
      'template' => 'document-browse',
    ),
    
    'ktc_fast_facts' => array(
      'render element' => 'element',
      'path' => drupal_get_path('module', 'ktccustom') . '/tmpl',
      'template' => 'ktc-facts',
    ),
    
    'ktc_videos' => array(
      'render element' => 'element',
      'path' => drupal_get_path('module', 'ktccustom') . '/tmpl',
      'template' => 'ktc-videos',
    ),
    
    'ktc_test_page' => array(
      'render element' => 'element',
      'path' => drupal_get_path('module', 'ktccustom') . '/tmpl',
      'template' => 'ktc-test-page',
    ),
    
    'ktc_gallery' => array(
      'render element' => 'element',
      'path' => drupal_get_path('module', 'ktccustom') . '/tmpl',
      'template' => 'ktc-gallery',
    ),
    
  );

  return $items;
}


function ktccustom_form_alter(&$form, &$form_state, $form_id) {
    // change the login form for the advocacy login
    // i know this changes it for the /user page too, but who cares...
    if ($form_id == 'user_login') {
        $img_path = path_to_theme().'/images/';
        $form['name']['#size'] = 30;
        $form['name']['#title'] = 'User name:';
        $form['pass']['#title'] = 'Password:';
        $form['pass']['#size'] = 30;
        $form['actions']['submit']['#value'] = 'null';
        $form['actions']['submit']['#type'] = 'image_button';
        $form['actions']['submit']['#src'] = $img_path . 'gobutton.png';
    }
    elseif ($form_id == 'soda_story_node_form') {
        // talk about obscure - need to use this function to include some functionality
        // related to processing file uploads when using a node add/edit form on
        // a different page than the usual one.
        form_load_include($form_state, 'inc', 'node', 'node.pages');
        //dpm($form);
        // prevent anyone from changing the number of views - this is done with drupal hooks
        $form['field_number_views']['und']['#disabled'] = TRUE;
        $now = time();
        if ($form['title']['#default_value'] == '') {
            $form['title']['#default_value'] = 'Soda story-' . $now;
        }
        $form['field_story_photos']['und']['#file_upload_title'] = 'Upload Photo';
        $form['actions']['submit']['#value'] = 'Submit';
    }
    elseif ($form_id == 'search_form') {
        $img_path = path_to_theme().'/images/';
        $form['basic']['keys']['#title'] = "Search";
        $form['basic']['submit']['#value'] = 'null';
        $form['basic']['submit']['#type'] = 'image_button';
        $form['basic']['submit']['#src'] = $img_path . 'gobutton-small.png';
    }
}


function ktccustom_get_fast_facts_news_flash() {
    drupal_add_css(drupal_get_path('module', 'ktccustom') . '/css/ktcfacts.css');
    drupal_add_js(drupal_get_path('module', 'ktccustom') . '/js/ktcfacts.js');
    
    $facts = array();
    
    $query = "SELECT node.nid AS nid, node.created AS node_created, node.type AS type,
        field_display_text_value AS text,
        field_fact_learn_more_value AS url
        FROM {node} node
        LEFT JOIN field_data_field_display_text on node.nid = field_data_field_display_text.entity_id
        LEFT JOIN field_data_field_fact_learn_more on node.nid = field_data_field_fact_learn_more.entity_id
        WHERE (( (node.status = '1') AND (node.type IN  ('fast_fact')) ))
        ORDER BY node_created DESC";
    
    $result = db_query($query);
    foreach ($result as $fact) {
        if (strlen($fact->text )> 80) {
            $fact->text = substr($fact->text, 0, 80) . '...';
        }
        //print_r($fact);
        $facts[] = $fact;
    }
    
    $query = "SELECT node.nid AS nid, node.created AS node_created, node.type AS type,
        field_fact_display_text_value AS text,
        field_fact_learn_more_value AS url
        FROM {node} node
        LEFT JOIN field_data_field_fact_display_text on node.nid = field_data_field_fact_display_text.entity_id
        LEFT JOIN field_data_field_fact_learn_more on node.nid = field_data_field_fact_learn_more.entity_id
        WHERE (( (node.status = '1') AND (node.type IN  ('news_flash')) ))
        ORDER BY node_created DESC";
    
    $news = array();
    $result = db_query($query);
    foreach ($result as $newsitem) {
        if (strlen($newsitem->text )> 80) {
            $newsitem->text = substr($newsitem->text, 0, 80) . '...';
        }
        //print_r($fact);
        $news[] = $newsitem;
    }
    
    $facts_and_news = array();
    $i = 0;
    foreach ($facts as $fact) {
        
        if ( $i == 1 && isset($news[0])) {
            $news[0]->index = $i;
            $facts_and_news[] = $news[0];
            $i++;
            $fact->index = $i;
            $facts_and_news[] = $fact;
        }
        elseif ( $i == 8 && isset($news[1])) {
            $news[1]->index = $i;
            $facts_and_news[] = $news[1];
            $i++;
            $fact->index = $i;
            $facts_and_news[] = $fact;
            $i++; // extra item added
        }
        else {
            $fact->index = $i;
            $facts_and_news[] = $fact;
        }
        $i++;
    }
    
    // add news flashes
    
    $rend = array(
        'facts' => $facts_and_news,
        '#theme' => 'ktc_fast_facts',
    );
    return $rend;
}


function ktccustom_test_page() {
    
    $myvar = 'yeeeahh kid';
    
    //$rend = array(
    //    'myvar' => $myvar,
    //    '#theme' => 'ktc_test_page',
    //)
    //return $rend;
}


function ktccustom_cron() {
     $query = db_select('node', 'n');
    $query
        ->fields('n', array('nid'))
        ->condition('type', 'soda_story')
        ->orderBy('nid');
    
    $results = $query->execute();
    $count = 0;
    foreach($results as $result) {
        $node = node_load($result->nid);
        //dd($node);
        //dd($node->nid);
        //
        //if ($node->field_story_video['und'][0]['value'] != '' && $node->field_story_video['und'][0]['value'] != 'http://') {
        //    $url = $node->field_story_video['und'][0]['value'];
        //    $urlparts = explode('v=', $url);
        //    $vid = $urlparts[1];
        //    $extra = explode('&', $vid);
        //    $vid = $extra[0];
        //    dd('updating num views for ' . $vid);
        //    $numviews = _get_num_youtube_views($vid);
        //    $node->field_number_views['und'][0]['value'] = $numviews;
        //    dd('updated to ' . $numviews);
        //}
    
    
        if (!isset($node->field_story_thumb['und'][0]['fid'])) {
            // grab the youtube thumbnail for the video,
            // unless one was supplied already
            $url = $node->field_story_video['und'][0]['value'];
            $urlparts = explode('v=', $url);
            if (isset($urlparts[1])) {
                $vid = $urlparts[1];
                $extra = explode('&', $vid);
                $vid = $extra[0];
               // dd('nid: ' . $node->nid . '; vid: ' . $vid);
            
                // 0.jpg is the bigger thumbnail, 2.jpg is the smaller one
                $request = drupal_http_request('http://img.youtube.com/vi/' . $vid . '/0.jpg');
                $data = $request->data;
                
                $new_file_name = str_replace(' ', '-', $node->title) . '-thumb.jpg';
                $file = file_save_data($request->data, 'public://story_thumbs/' . $new_file_name, FILE_EXISTS_RENAME);
                $node->field_story_thumb['und'][0]['fid'] = $file->fid;
                $node->field_doc_file['und'][0]['display'] = 1;
                
            }
        }
        
        node_save($node);
        dd('node saved');
    }
}