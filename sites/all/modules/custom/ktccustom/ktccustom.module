<?php

/**
 * implementation of hook_menu
 */
function ktccustom_menu() {

    $items['document/%'] = array(
        'title' => 'Document',
        'page callback' => 'ktc_get_document',
        'page arguments' => array(1),
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );

    $items['document-browse'] = array(
        'title' => '',
        'page callback' => 'ktc_document_browse',
        'page arguments' => array(1),
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    
    $items['document-browse/%'] = array(
        'title' => '',
        'page callback' => 'ktc_document_browse_category',
        'page arguments' => array(1),
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    
    $items['advocacy-login'] = array(
        'title' => 'Advocacy Tools',
        'page callback' => 'ktc_advocacy_login',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    
    $items['soda-stories-videos'] = array(
        'title' => 'Soda Stories',
        'page callback' => 'ktc_soda_stories',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    
    return $items;
}


function ktccustom_init() {
    // add some css/js to fancy up some of the node edit pages
    drupal_add_js(drupal_get_path('module', 'ktccustom') . '/js/ktcadmin.js');
    drupal_add_css(drupal_get_path('module', 'ktccustom') . '/css/ktcadmin.css');
}



function ktc_soda_stories() {
    drupal_add_js(drupal_get_path('theme', 'ktc') .'/js/ktc_youtube.js');
    drupal_add_js(drupal_get_path('module', 'ktccustom') . '/js/ktcvideos.js');
    drupal_add_css(drupal_get_path('module', 'ktccustom') . '/css/ktcvideos.css');
    
    $most_watched = views_embed_view('most_viewed_videos', 'block');
    $video_cats = views_embed_view('video_categories', 'block');
    
    $cat_tree = taxonomy_get_tree(7);
    //dpm($cat_tree);
    $cats = array();
    foreach ($cat_tree as $cat) {
        $cat_obj = array();
        $cat_obj['name'] = $cat->name;
        $cats[] = $cat_obj;
    }
    
     $rend = array(
        'cats' => $cats,
        'video_cats' => $video_cats,
        'most_watched' => $most_watched,
        '#theme' => 'ktc_videos',
    );
    return $rend;
}


function ktccustom_node_presave($node) {
  if ($node->type == 'soda_story') {
    
    if (!isset($node->field_story_thumb['und'][0]['fid'])) {
        // grab the youtube thumbnail for the video,
        // unless one was supplied already
        $url = $node->field_story_video['und'][0]['value'];
        $urlparts = explode('v=', $url);
        $vid = $urlparts[1];
        $extra = explode('&', $vid);
        $vid = $extra[0];
    
        // 0.jpg is the bigger thumbnail, 2.jpg is the smaller one
        $request = drupal_http_request('http://img.youtube.com/vi/' . $vid . '/0.jpg');
        $data = $request->data;
    
        $new_file_name = str_replace(' ', '-', $node->title) . '-thumb.jpg';
        $file = file_save_data($request->data, 'public://story_thumbs/' . $new_file_name, FILE_EXISTS_RENAME);
        $node->field_story_thumb['und'][0]['fid'] = $file->fid;
        $node->field_doc_file['und'][0]['display'] = 1; 
    }
  }
  
}


// create a login modal. ctools modal is able to handle form validation in a modal,
// which would otherwise be time consuming to do from scratch.
function ktc_advocacy_login() {
    ctools_include('ajax');
    ctools_include('modal');
     $form_state = array(
      'ajax' => TRUE,
      'title' => t('Login'),
    );
    $output = ctools_modal_form_wrapper('user_login', $form_state);
    print ajax_render($output);
}



// gets the file url for the node and sends the user to it
function ktc_get_document($nid) {
    $node = node_load($nid);
    if ($node == NULL) {
        return "There is no document with id " . $nid . ".";
    }
    if (!isset($node->field_document_file['und'])) {
        return "The file associated with this document appears to be missing.";
    }
    
    $url = '';
    if (isset($node->field_doc_type['und']) && $node->field_doc_type['und'][0]['tid'] == 25) {  // external url type
        $url = $node->field_doc_external['und'][0]['url'];
    }
    else {  // locally uploaded file
        $file = file_load($node->field_document_file['und'][0]['fid']);
        $url = file_create_url($file->uri);
    }
    drupal_goto($url);
}


function ktc_document_browse() {
    drupal_add_css(drupal_get_path('module', 'ktccustom') . '/css/ktccustom.css');
    $topics = taxonomy_get_tree(2);
    $audience = taxonomy_get_tree(3);
    $resourcetypes = taxonomy_get_tree(4); 
    //dpm($topics);
    $rend = array(
        'show_results' => FALSE,
        'topics' => $topics,
        'audience' => $audience,
        'resourcetypes' => $resourcetypes,
        '#theme' => 'ktc_documents',
    );
    return $rend;
}


function ktc_document_browse_category($tid) {
    drupal_add_css(drupal_get_path('module', 'ktccustom') . '/css/ktccustom.css');
    $topics = taxonomy_get_tree(2);
    //$audience = taxonomy_get_tree(3);
    $resourcetypes = taxonomy_get_tree(4); 
    //dpm($topics);
    
    $term = taxonomy_term_load($tid);
    $term_name = '';
    if ($term) {
        $term_name = $term->name;
    }
    // get docs that match the criteria
    $docs = views_embed_view('documents_by_category', 'block', $tid);
    
    $rend = array(
        'show_results' => TRUE,
        'topics' => $topics,
        //'audience' => $audience,
        'category_name' => $term_name,
        'resourcetypes' => $resourcetypes,
        'docs' => $docs,
        '#theme' => 'ktc_documents',
    );
    return $rend;
}


function theme_bw_wolf($variables) {
    return 'hello there';
}


function ktccustom_theme() {
  $items = array(
    'ktc_documents' => array(
      'render element' => 'element',
      'path' => drupal_get_path('module', 'ktccustom') . '/tmpl',
      'template' => 'document-browse',
    ),
    
    'ktc_fast_facts' => array(
      'render element' => 'element',
      'path' => drupal_get_path('module', 'ktccustom') . '/tmpl',
      'template' => 'ktc-facts',
    ),
    
    'ktc_videos' => array(
      'render element' => 'element',
      'path' => drupal_get_path('module', 'ktccustom') . '/tmpl',
      'template' => 'ktc-videos',
    ),
    
  );

  return $items;
}


function ktccustom_form_alter(&$form, &$form_state, $form_id) {
    // change the login form for the advocacy login
    // i know this changes it for the /user page too, but who cares...
    if ($form_id == 'user_login') {
        $img_path = path_to_theme().'/images/';
        $form['name']['#size'] = 30;
        $form['name']['#title'] = 'User name:';
        $form['pass']['#title'] = 'Password:';
        $form['pass']['#size'] = 30;
        $form['actions']['submit']['#value'] = 'null';
        $form['actions']['submit']['#type'] = 'image_button';
        $form['actions']['submit']['#src'] = $img_path . 'gobutton.png';
    }
    elseif ($form_id == 'soda_story_node_form') {
        // talk about obscure - need to use this function to include some functionality
        // related to processing file uploads when using a node add/edit form on
        // a different page than the usual one.
        form_load_include($form_state, 'inc', 'node', 'node.pages');
        //dpm($form);
        // prevent anyone from changing the number of views - this is done with drupal hooks
        $form['field_num_views']['und']['#disabled'] = TRUE;
        $now = time();
        $form['title']['#default_value'] = 'Soda story-' . $now;
        $form['actions']['submit']['#value'] = 'Submit';
    }
    elseif ($form_id == 'search_form') {
        $img_path = path_to_theme().'/images/';
        $form['basic']['keys']['#title'] = "Search";
        $form['basic']['submit']['#value'] = 'null';
        $form['basic']['submit']['#type'] = 'image_button';
        $form['basic']['submit']['#src'] = $img_path . 'gobutton-small.png';
    }
}


function ktccustom_get_fast_facts_news_flash() {
     $facts[] = array();
    
    $query = "SELECT node.nid AS nid, node.created AS node_created,
        field_display_text_value AS text,
        field_fact_learn_more_value AS url
        FROM {node} node
        LEFT JOIN field_data_field_display_text on node.nid = field_data_field_display_text.entity_id
        LEFT JOIN field_data_field_fact_learn_more on node.nid = field_data_field_fact_learn_more.entity_id
        WHERE (( (node.status = '1') AND (node.type IN  ('fast_fact')) ))
        ORDER BY node_created DESC";
    
    $result = db_query($query);
    $i = 0;
    foreach ($result as $fact) {
        $fact->index = $i;
        $facts[] = $fact;
        $i++;
    }
    
    $rend = array(
        'facts' => $facts,
        '#theme' => 'ktc_fast_facts',
    );
    return $rend;
}
